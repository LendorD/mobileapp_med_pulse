basePath: /api/v1
definitions:
  entities.Certificate:
    properties:
      date:
        type: string
      number:
        type: string
    type: object
  entities.ClientRef:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  entities.Doctor:
    properties:
      attachment_end:
        type: string
      attachment_start:
        type: string
      clinic:
        type: string
      full_name:
        type: string
      policy_or_cert_number:
        type: string
    type: object
  entities.OneCMedicalCard:
    properties:
      additional_phone:
        type: string
      address:
        type: string
      age:
        type: string
      attending_doctor:
        $ref: '#/definitions/entities.Doctor'
      birth_date:
        type: string
      certificate:
        $ref: '#/definitions/entities.Certificate'
      display_name:
        description: Основные поля
        type: string
      email:
        type: string
      legal_representative:
        allOf:
        - $ref: '#/definitions/entities.ClientRef'
        description: Вложенные структуры
      mobile_phone:
        type: string
      patient_id:
        type: string
      policy:
        $ref: '#/definitions/entities.Policy'
      relative:
        $ref: '#/definitions/entities.Relative'
      snils:
        type: string
      workplace:
        type: string
    type: object
  entities.OneCPatientListItem:
    properties:
      birthDate:
        description: в формате "YYYY-MM-DD"
        type: string
      fullName:
        type: string
      gender:
        description: true — мужской
        type: boolean
      id:
        type: integer
      medical_card:
        $ref: '#/definitions/entities.OneCMedicalCard'
      patientID:
        type: string
    type: object
  entities.PatientListUpdate:
    properties:
      patients:
        items:
          $ref: '#/definitions/entities.OneCPatientListItem'
        type: array
    type: object
  entities.Policy:
    properties:
      number:
        type: string
      type:
        type: string
    type: object
  entities.Relative:
    properties:
      name:
        type: string
      status:
        type: string
    type: object
  handlers.AuthCreditionals:
    properties:
      users:
        items:
          $ref: '#/definitions/handlers.OneCUser'
        type: array
    type: object
  handlers.IncorrectDataError:
    properties:
      response:
        properties:
          code:
            example: 401
            type: integer
          message:
            example: Некорректные данные
            type: string
        type: object
      status:
        description: error
        example: IncorrectDataError
        type: string
    type: object
  handlers.IncorrectFormatError:
    properties:
      response:
        properties:
          code:
            example: 400
            type: integer
          message:
            example: Неверный формат запроса
            type: string
        type: object
      status:
        description: error
        example: IncorrectFormatError
        type: string
    type: object
  handlers.InternalServerError:
    properties:
      response:
        properties:
          code:
            example: 500
            type: integer
          message:
            example: Внутренняя ошибка сервера
            type: string
        type: object
      status:
        description: error
        example: InternalServerError
        type: string
    type: object
  handlers.OneCUser:
    properties:
      login:
        example: doc1
        type: string
      password:
        example: secret123
        type: string
    type: object
  models.Call:
    properties:
      address:
        description: Адрес (адрес вызова)
        type: string
      call_id:
        type: string
      patient_count:
        description: Кол-во пациентов
        type: integer
      patients:
        description: Данные пациентов
        items:
          $ref: '#/definitions/models.Patient'
        type: array
      phone:
        description: Телефон пациента
        type: string
      status:
        allOf:
        - $ref: '#/definitions/models.CallStatus'
        description: Статус вызова
    type: object
  models.CallStatus:
    enum:
    - Выполнен
    - В работе
    type: string
    x-enum-varnames:
    - CallStatusCompleted
    - CallStatusWork
  models.DoctorAuthResponse:
    description: Ответ с данными авторизованного врача
    properties:
      id:
        description: ID врача
        example: 1
        type: integer
      token:
        description: JWT токен
        example: eyJhbGciOi...
        type: string
    type: object
  models.DoctorLoginRequest:
    description: Запрос для входа врача в систему
    properties:
      password:
        description: Пароль
        example: "123"
        type: string
      phone:
        description: Логин (телефон)
        example: "+79622840765"
        type: string
    required:
    - password
    - phone
    type: object
  models.Patient:
    properties:
      age:
        description: Возраст
        type: string
      birth_date:
        description: Дата рождения
        type: string
      certificate:
        allOf:
        - $ref: '#/definitions/entities.Certificate'
        description: Сертификат
      full_name:
        description: ФИО
        type: string
      gender:
        description: 'Пол: true — мужской, false — женский'
        type: boolean
      phone:
        description: Телефон
        type: string
      policy:
        allOf:
        - $ref: '#/definitions/entities.Policy'
        description: Полис
      snils:
        description: СНИЛС
        type: string
    type: object
  models.PatientListResponse:
    properties:
      patient:
        items:
          $ref: '#/definitions/entities.OneCPatientListItem'
        type: array
    type: object
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: API Support
  description: API для работы с приёмами пациентов
  title: ClinicHub API
  version: 1.0.0
paths:
  /auth:
    post:
      consumes:
      - application/json
      description: Аутентифицирует врача по номеру телефона и паролю
      parameters:
      - description: Данные для входа
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.DoctorLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешное создание
          schema:
            $ref: '#/definitions/models.DoctorAuthResponse'
        "400":
          description: Неверный формат запроса
          schema:
            $ref: '#/definitions/handlers.IncorrectFormatError'
        "401":
          description: Неверные учётные данные
          schema:
            $ref: '#/definitions/handlers.IncorrectDataError'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/handlers.InternalServerError'
      summary: Вход в систему
      tags:
      - Auth
  /medcard/{pat_id}:
    get:
      parameters:
      - description: Patient ID
        in: path
        name: pat_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.OneCMedicalCard'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get medical card by patient ID
      tags:
      - MedicalCard
    put:
      consumes:
      - application/json
      parameters:
      - description: Patient ID
        in: path
        name: pat_id
        required: true
        type: string
      - description: Medical card update data
        in: body
        name: update
        required: true
        schema:
          $ref: '#/definitions/entities.OneCMedicalCard'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update medical card by patient ID
      tags:
      - MedicalCard
  /onec/auth:
    post:
      consumes:
      - application/json
      description: Syncs a batch of users (login + password) received from 1C into
        the internal auth system.
      parameters:
      - description: List of users to sync
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.AuthCreditionals'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Sync users from 1C
      tags:
      - Webhooks
  /patients:
    get:
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Items per page (default: 20, max: 100)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PatientListResponse'
      summary: Get cached patient list from 1C with pagination
      tags:
      - Patients
  /signature/{recep_id}:
    get:
      description: Returns the base64-encoded signature image for a given reception
        ID.
      parameters:
      - description: Reception ID
        in: path
        name: recep_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get patient signature
      tags:
      - Emergency
    post:
      consumes:
      - multipart/form-data
      description: Accepts a multipart form with a 'signature' file (e.g., PNG, JPG)
        and saves it.
      parameters:
      - description: Reception ID
        in: path
        name: recep_id
        required: true
        type: string
      - description: Signature image file
        in: formData
        name: signature
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Upload patient signature
      tags:
      - Emergency
  /webhook/onec/patients:
    post:
      consumes:
      - application/json
      parameters:
      - description: Patient list update from 1C
        in: body
        name: update
        required: true
        schema:
          $ref: '#/definitions/entities.PatientListUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: 'Webhook from 1C: patient list update'
      tags:
      - 1C
  /webhook/onec/receptions:
    post:
      consumes:
      - application/json
      parameters:
      - description: Receptions update
        in: body
        name: update
        required: true
        schema:
          $ref: '#/definitions/models.Call'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: 'Webhook from 1C: new receptions'
      tags:
      - 1C
  /ws/notification/register/{user_id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: User id
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Подписаться на уведомления
      tags:
      - Notification
  /ws/notification/unregister/{user_id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: User id
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Отписаться от уведомлений
      tags:
      - Notification
swagger: "2.0"
